{
	"info": {
		"_postman_id": "12345678-abcd-1234-efgh-123456789012",
		"name": "EventX Studio API - Complete Collection",
		"description": "Complete API collection for EventX Studio - Event Management Platform with working MongoDB connection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "üîç Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"health"
					]
				},
				"description": "Check if the API server is running and connected to MongoDB database"
			},
			"response": [
				{
					"name": "Health Check Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"message\": \"EventX Studio API is running\",\n    \"timestamp\": \"2025-08-21T10:30:00.000Z\",\n    \"environment\": \"development\"\n}"
				}
			]
		},
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.data.token);",
									"    pm.environment.set('userId', response.data.user._id);",
									"    console.log('Token saved:', response.data.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123\",\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account. Automatically saves JWT token to environment variables."
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.data.token);",
									"    pm.environment.set('userId', response.data.user._id);",
									"    console.log('Token saved:', response.data.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with email and password. Automatically saves JWT token to environment variables."
					}
				},
				{
					"name": "Get My Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current user profile information"
					}
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user session"
					}
				}
			],
			"description": "User authentication and profile management endpoints"
		},
		{
			"name": "üéâ Events",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/events?page=1&limit=10&category=Technology&city=New York&search=tech",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (default: 10)"
								},
								{
									"key": "category",
									"value": "Technology",
									"description": "Filter by category",
									"disabled": true
								},
								{
									"key": "city",
									"value": "New York",
									"description": "Filter by city",
									"disabled": true
								},
								{
									"key": "search",
									"value": "tech",
									"description": "Search in name and description",
									"disabled": true
								}
							]
						},
						"description": "Get list of all active events with optional filters (pagination, category, city, search)"
					}
				},
				{
					"name": "Create Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('eventId', response.data._id);",
									"    console.log('Event ID saved:', response.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tech Innovation Summit 2025\",\n    \"description\": \"Join industry leaders discussing the future of technology and innovation. This summit will feature keynote speakers from major tech companies, startup showcases, and networking opportunities.\",\n    \"categories\": [\"Technology\"],\n    \"date\": \"2025-09-15\",\n    \"time\": {\n        \"start\": \"09:00\",\n        \"end\": \"17:00\"\n    },\n    \"venue\": {\n        \"name\": \"Tech Convention Center\",\n        \"address\": \"456 Innovation Drive, San Francisco, CA 94105\",\n        \"city\": \"San Francisco\",\n        \"country\": \"USA\",\n        \"capacity\": 1000\n    },\n    \"pricing\": {\n        \"ticketPrice\": 150,\n        \"currency\": \"USD\"\n    },\n    \"seatConfiguration\": {\n        \"totalSeats\": 1000,\n        \"availableSeats\": 1000\n    },\n    \"tags\": [\"technology\", \"innovation\", \"conference\", \"networking\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events"
							]
						},
						"description": "Create a new event (requires authentication). Automatically saves event ID to environment variables."
					}
				},
				{
					"name": "Get Event by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Get details of a specific event by its ID"
					}
				},
				{
					"name": "Update Event",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tech Innovation Summit 2025 - Updated\",\n    \"description\": \"Updated description: Join industry leaders discussing the future of technology and innovation with new workshops added.\",\n    \"pricing\": {\n        \"ticketPrice\": 175,\n        \"currency\": \"USD\"\n    },\n    \"tags\": [\"technology\", \"innovation\", \"conference\", \"networking\", \"workshops\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Update an existing event (only event organizer can update their events)"
					}
				},
				{
					"name": "Delete Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Delete an event (only event organizer or admin can delete)"
					}
				},
				{
					"name": "Get My Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/events/my?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"my"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get events created by the current authenticated user"
					}
				}
			],
			"description": "Event management endpoints for creating, reading, updating, and deleting events"
		},
		{
			"name": "üé´ Bookings",
			"item": [
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('bookingId', response.data._id);",
									"    console.log('Booking ID saved:', response.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventId\": \"{{eventId}}\",\n    \"seats\": [\n        {\n            \"seatNumber\": \"A1\",\n            \"row\": \"A\",\n            \"section\": \"VIP\"\n        },\n        {\n            \"seatNumber\": \"A2\",\n            \"row\": \"A\",\n            \"section\": \"VIP\"\n        }\n    ],\n    \"attendeeInfo\": {\n        \"name\": \"John Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"phone\": \"+1234567890\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							]
						},
						"description": "Create a new booking for an event. Automatically saves booking ID to environment variables."
					}
				},
				{
					"name": "Get My Bookings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/my?page=1&limit=10&status=confirmed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"my"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "status",
									"value": "confirmed",
									"description": "Filter by booking status (pending, confirmed, cancelled, checked-in)",
									"disabled": true
								}
							]
						},
						"description": "Get current user's bookings with optional filtering by status"
					}
				},
				{
					"name": "Get Booking by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}"
							]
						},
						"description": "Get details of a specific booking by its ID"
					}
				},
				{
					"name": "Confirm Booking (Payment)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transactionId\": \"TXN123456789\",\n    \"paymentMethod\": \"card\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}/confirm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}",
								"confirm"
							]
						},
						"description": "Confirm a booking (simulate payment). This generates QR code for the ticket."
					}
				},
				{
					"name": "Cancel Booking",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Unable to attend due to schedule conflict\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}",
								"cancel"
							]
						},
						"description": "Cancel a booking (must be done at least 24 hours before event)"
					}
				},
				{
					"name": "Check In Booking",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}/checkin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}",
								"checkin"
							]
						},
						"description": "Check in a booking at the event (event organizer/admin only)"
					}
				},
				{
					"name": "Validate QR Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"qrData\": \"{\\\"bookingId\\\":\\\"BK-001-2025\\\",\\\"eventId\\\":\\\"64a1b2c3d4e5f6789012345b\\\",\\\"timestamp\\\":\\\"2025-08-21T10:30:00.000Z\\\"}\",\n    \"eventId\": \"{{eventId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/validate-qr",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"validate-qr"
							]
						},
						"description": "Validate a QR code for event entry (event organizer/admin only)"
					}
				},
				{
					"name": "Get Event Bookings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/event/{{eventId}}?page=1&limit=10&status=confirmed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"event",
								"{{eventId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "status",
									"value": "confirmed",
									"disabled": true
								}
							]
						},
						"description": "Get all bookings for a specific event (organizer/admin only)"
					}
				}
			],
			"description": "Booking management endpoints for creating, viewing, and managing event bookings"
		},
		{
			"name": "üìä Analytics",
			"item": [
				{
					"name": "Get Dashboard Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/analytics/dashboard?startDate=2025-08-01&endDate=2025-08-31",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"analytics",
								"dashboard"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2025-08-01",
									"description": "Start date for analytics period"
								},
								{
									"key": "endDate",
									"value": "2025-08-31",
									"description": "End date for analytics period"
								}
							]
						},
						"description": "Get analytics dashboard data for event organizer (total events, bookings, revenue, etc.)"
					}
				},
				{
					"name": "Get Event Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/analytics/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"analytics",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Get detailed analytics for a specific event"
					}
				},
				{
					"name": "Get Booking Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/analytics/summary?startDate=2025-08-01&endDate=2025-08-31",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"analytics",
								"summary"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2025-08-01"
								},
								{
									"key": "endDate",
									"value": "2025-08-31"
								}
							]
						},
						"description": "Get booking analytics summary with trends and statistics"
					}
				}
			],
			"description": "Analytics and reporting endpoints for event organizers and admins"
		},
		{
			"name": "üë§ Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users?page=1&limit=10&role=user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "role",
									"value": "user",
									"description": "Filter by user role",
									"disabled": true
								}
							]
						},
						"description": "Get all users (admin only)"
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get user details by ID (admin or own profile)"
					}
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe Updated\",\n    \"profileDetails\": {\n        \"phone\": \"+1234567890\",\n        \"dateOfBirth\": \"1990-01-15\",\n        \"gender\": \"male\",\n        \"location\": {\n            \"city\": \"San Francisco\",\n            \"state\": \"CA\",\n            \"country\": \"USA\"\n        },\n        \"interests\": [\"Technology\", \"Music\", \"Sports\"]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Update user profile information"
					}
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete user account (admin only or self)"
					}
				}
			],
			"description": "User management endpoints for profile and account management"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set base URL if not set",
					"if (!pm.environment.get('baseUrl')) {",
					"    pm.environment.set('baseUrl', 'http://localhost:5003');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Log response for debugging",
					"console.log('Response Status:', pm.response.code);",
					"console.log('Response Body:', pm.response.text());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5003",
			"type": "string",
			"description": "Base URL for the EventX Studio API"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string",
			"description": "JWT authentication token (auto-set after login/register)"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string",
			"description": "Current user ID (auto-set after login/register)"
		},
		{
			"key": "eventId",
			"value": "",
			"type": "string",
			"description": "Event ID (auto-set after creating an event)"
		},
		{
			"key": "bookingId",
			"value": "",
			"type": "string",
			"description": "Booking ID (auto-set after creating a booking)"
		}
	]
}
